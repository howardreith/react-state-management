{"ast":null,"code":"import _objectSpread from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/howardreith/workspace/redux-demo/component-state/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/howardreith/workspace/redux-demo/component-state/src/PirateTicTacToe.js\";\nimport React, { Component } from 'react';\nimport GameBoard from './GameBoard';\nimport GameInfo from './GameInfo';\nimport ResetGame from './ResetGame';\nimport GameScore from './GameScore';\nimport './index.css';\nimport { emptyBoard, NONE, score } from \"./helpers\";\n\nvar PirateTicTacToe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PirateTicTacToe, _Component);\n\n  function PirateTicTacToe(props) {\n    var _this;\n\n    _classCallCheck(this, PirateTicTacToe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PirateTicTacToe).call(this, props));\n    _this.takeTurn = _this.takeTurn.bind(_assertThisInitialized(_this));\n    _this.resetGame = _this.resetGame.bind(_assertThisInitialized(_this));\n    _this.state = {\n      gameBoard: emptyBoard,\n      winner: null,\n      player: 'X',\n      xWins: 0,\n      oWins: 0\n    };\n    return _this;\n  }\n\n  _createClass(PirateTicTacToe, [{\n    key: \"takeTurn\",\n    value: function takeTurn(action) {\n      if (this.state.winner || this.state.gameBoard[action.row][action.square] !== NONE) {\n        return;\n      } // clone the array so we don't mutate the existing state\n\n\n      var gameBoard = this.state.gameBoard.map(function (r) {\n        return r.slice(0);\n      });\n      gameBoard[action.row][action.square] = this.state.player;\n      var player = this.state.player === 'X' ? 'O' : 'X';\n      var winner = score(gameBoard);\n      var xWins = winner === 'X' ? this.state.xWins + 1 : this.state.xWins;\n      var oWins = winner === 'O' ? this.state.oWins + 1 : this.state.oWins;\n      this.setState(_objectSpread({}, this.state, {\n        player: player,\n        winner: winner,\n        gameBoard: gameBoard,\n        xWins: xWins,\n        oWins: oWins\n      }));\n    }\n  }, {\n    key: \"resetGame\",\n    value: function resetGame() {\n      this.setState(_objectSpread({}, this.state, {\n        gameBoard: emptyBoard,\n        winner: null,\n        player: 'X'\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron col-10 offset-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Pirate Tic Tac Toe\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Click on a Tic Tac Toe square to claim it for the current player.\"))), React.createElement(\"div\", {\n        className: \"row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 col-sm-10 offset-md-1 offset-sm-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(GameInfo, {\n        player: this.state.player,\n        winner: this.state.winner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(GameBoard, {\n        gameBoard: this.state.gameBoard,\n        onTakeTurn: this.takeTurn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-5 col-sm-10 offset-md-0 offset-sm-1 align-items-center text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GameScore, {\n        xWins: this.state.xWins,\n        oWins: this.state.oWins,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(ResetGame, {\n        onResetGame: this.resetGame,\n        winner: this.state.winner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PirateTicTacToe;\n}(Component);\n\nexport default PirateTicTacToe;","map":{"version":3,"sources":["/home/howardreith/workspace/redux-demo/component-state/src/PirateTicTacToe.js"],"names":["React","Component","GameBoard","GameInfo","ResetGame","GameScore","emptyBoard","NONE","score","PirateTicTacToe","props","takeTurn","bind","resetGame","state","gameBoard","winner","player","xWins","oWins","action","row","square","map","r","slice","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport GameBoard from './GameBoard';\nimport GameInfo from './GameInfo';\nimport ResetGame from './ResetGame';\nimport GameScore from './GameScore';\nimport './index.css';\nimport {emptyBoard, NONE, score} from \"./helpers\";\n\n\nclass PirateTicTacToe extends Component {\n    constructor(props) {\n        super(props)\n\n        this.takeTurn = this.takeTurn.bind(this)\n        this.resetGame = this.resetGame.bind(this)\n\n        this.state = {\n            gameBoard: emptyBoard,\n            winner: null,\n            player: 'X',\n            xWins: 0,\n            oWins: 0,\n        };\n    }\n\n    takeTurn(action) {\n        if (this.state.winner || this.state.gameBoard[action.row][action.square] !== NONE) {\n            return\n        }\n\n        // clone the array so we don't mutate the existing state\n        let gameBoard = this.state.gameBoard.map(r => r.slice(0));\n        gameBoard[action.row][action.square] = this.state.player;\n\n        const player = this.state.player === 'X' ? 'O' : 'X';\n        const winner = score(gameBoard);\n        const xWins = winner === 'X' ? this.state.xWins + 1 : this.state.xWins;\n        const oWins = winner === 'O' ? this.state.oWins + 1 : this.state.oWins;\n\n        this.setState({...this.state, player, winner, gameBoard, xWins: xWins, oWins: oWins});\n    }\n\n    resetGame() {\n        this.setState({...this.state, gameBoard: emptyBoard, winner: null, player: 'X'})\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"jumbotron col-10 offset-1\">\n                        <h1>Pirate Tic Tac Toe</h1>\n                        <hr className=\"my-4\"/>\n                        <p>\n                            Click on a Tic Tac Toe square to claim it for the current player.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"row align-items-center\">\n                    <div className=\"col-md-5 col-sm-10 offset-md-1 offset-sm-1\">\n                        <GameInfo player={this.state.player} winner={this.state.winner}/>\n                        <GameBoard gameBoard={this.state.gameBoard} onTakeTurn={this.takeTurn}/>\n                    </div>\n                    <div className=\"col-md-5 col-sm-10 offset-md-0 offset-sm-1 align-items-center text-center\">\n                        <GameScore xWins={this.state.xWins} oWins={this.state.oWins}/>\n                        <ResetGame onResetGame={this.resetGame} winner={this.state.winner}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default PirateTicTacToe;\n"]},"metadata":{},"sourceType":"module"}